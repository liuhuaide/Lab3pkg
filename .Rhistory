devtools::build()
usethis::use github action check standard()
usethis::use_github_action_check_standard()
usethis::use_github_action("check-standard")
usethis::use_github_action("check-standard")
install.packages("devtools")
devtools::install_github("liuhuaide/Lab3pkg")
search()
library(Lab3pkg)
dijkstra(wiki_graph, 1)
wiki_graph <-
data.frame(v1=c(1,1,1,2,2,2,3,3,3,3,4,4,4,5,5,6,6,6),
v2=c(2,3,6,1,3,4,1,2,4,6,2,3,5,4,6,1,3,5),
w=c(7,9,14,7,10,15,9,10,11,2,15,11,6,6,9,14,2,9))
dijkstra(wiki_graph, 1)
usethis::use_github_action_check_standard()
library(usethis)
# 使用新的函数和参数
use_github_action(check_standard = TRUE)
function (name = NULL, ref = NULL, url = NULL, save_as = NULL,
readme = NULL, ignore = TRUE, open = FALSE, badge = NULL)
{
maybe_name(name)
maybe_name(ref)
maybe_name(url)
maybe_name(save_as)
maybe_name(readme)
check_bool(ignore)
check_bool(open)
check_bool(badge, allow_null = TRUE)
if (is.null(url)) {
name <- name %||% choose_gha_workflow()
if (path_ext(name) == "") {
name <- path_ext_set(name, "yaml")
}
ref <- ref %||% latest_release()
url <- glue("https://raw.githubusercontent.com/r-lib/actions/{ref}/examples/{name}")
readme <- glue("https://github.com/r-lib/actions/blob/{ref}/examples/README.md")
}
withr::defer(rstudio_git_tickle())
use_dot_github(ignore = ignore)
if (is.null(save_as)) {
if (is_check_action(url)) {
save_as <- "R-CMD-check.yaml"
}
else {
save_as <- path_file(url)
}
}
save_as <- path(".github", "workflows", save_as)
create_directory(path_dir(proj_path(save_as)))
if (grepl("^http", url)) {
new <- use_github_file(url, save_as = save_as, ignore = FALSE,
open = open)
}
else {
contents <- read_utf8(url)
new <- write_over(proj_path(save_as), contents)
}
if (!is.null(readme)) {
ui_bullets(c(`_` = "Learn more at {.url {readme}}."))
}
if (badge %||% is_check_action(url)) {
use_github_actions_badge(path_file(save_as))
}
if (badge %||% is_coverage_action(url)) {
use_codecov_badge(target_repo_spec())
}
invisible(new)
}
detach("package:base", unload = TRUE)
#封装包，建包。写入注释
devtools::document()
devtools::document()
devtools::build()
#包的检查和安装
devtools::check()
#封装包，建包。写入注释
devtools::document()
devtools::build()
#包的检查和安装
devtools::check()
#封装包，建包。写入注释
devtools::document()
devtools::build()
#包的检查和安装
devtools::check()
usethis::use github action check standard()
library(usethis)
#其他：use_git和use_github
usethis::use_github_action_check_standard()
#其他：use_git和use_github
usethis::use_github_action_check_standard()
usethis::use_github_action_check_standard()
usethis::use_github_action(check_standard = TRUE)
install.packages("usethis")
usethis::use_github_action("check-standard")
devtools::check()
#封装包，建包。写入注释
devtools::document()
#包的检查和安装
devtools::check()
#封装包，建包。写入注释
devtools::document()
#包的检查和安装
devtools::check()
#封装包，建包。写入注释
devtools::document()
#包的检查和安装
devtools::check()
usethis::use_data(wiki_graph, overwrite = TRUE)
usethis::use_data(wiki_graph, overwrite = TRUE)
